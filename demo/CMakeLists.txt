cmake_minimum_required(VERSION 3.10)
project(minicpm)

set(CMAKE_EXPORT_COMPILE_COMMANDS ON CACHE INTERNAL "") 

if (NOT DEFINED TARGET_ARCH)
    set(TARGET_ARCH pcie)
endif()

if (${TARGET_ARCH} STREQUAL "pcie")
    include_directories(${PROJECT_SOURCE_DIR}/../support/include_bm1684x)
    add_definitions(-DPCIE_TARGET)
    link_directories(${PROJECT_SOURCE_DIR}/../support/lib_pcie)
	message("Pcie mode, starting......")
elseif (${TARGET_ARCH} STREQUAL "soc_bm1684x")
    include_directories(${PROJECT_SOURCE_DIR}/../support/include_bm1684x)
    add_definitions(-DSOC_TARGET)
    link_directories(${PROJECT_SOURCE_DIR}/../support/lib_soc_bm1684x)
	message("soc_bm1684x mode, starting......")
elseif (${TARGET_ARCH} STREQUAL "soc_bm1688")
    include_directories(${PROJECT_SOURCE_DIR}/../support/include_bm1688)
    add_definitions(-DSOC_TARGET)
    link_directories(${PROJECT_SOURCE_DIR}/../support/lib_soc_bm1688)
	message("soc_bm1688 mode, starting......")
elseif (${CMAKE_HOST_SYSTEM_PROCESSOR} STREQUAL "aarch64")
    include_directories(${PROJECT_SOURCE_DIR}/../support/include_bm1688)
	add_definitions(-DSOC_TARGET)
	link_directories(${PROJECT_SOURCE_DIR}/../support/lib_soc_bm1688)
	message("SoC mode, starting......")
endif()

add_definitions(-DDEBUG --std=c++17 -fPIC -Wall -Werror)
set(CMAKE_BUILD_TYPE "Debug")

add_executable(minicpm demo.cpp)
target_link_libraries(minicpm bmlib bmrt sentencepiece)
